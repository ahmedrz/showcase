
@{
    ViewBag.Title = "Carriers";
}

<div class="row">
    <div class="col-xl-12 col-12-6 mb-4">
        <div class="card card-shadow">
            <div class="card-header">
                <div class="card-title">
                    <h4>Carriers</h4>
                </div>
            </div>
            <div class="card-body">
                @(Html.ActionLink("Add new carrier", "CarrierData", "Account", null, new { @class = "k-button textButton k-primary" }))
                @(Html.Kendo().Grid<EManifestServices.Models.CarrierModel>()
                                                                                                                                         .Name("grid")
                     .Columns(columns =>
                     {
                         columns.Bound(c => c.CarrierId).Hidden();
                         columns.Bound(c => c.CarrierName).Title("Username").Width(200);
                         columns.Bound(c => c.Email).Title("Email").Width(200);
                         columns.Bound(c => c.Phone).Title("Phone").Width(200);
                         columns.Bound(c => c.IsActive).Title("Active").ClientTemplate("<label class='custom-control custom-checkbox'><input type='checkbox' class='custom-control-input' disabled='' #= IsActive ? checked='checked' :'' #><span class='custom-control-indicator'></span> <span class='custom-control-description'>Active</span></label>");
                         columns.Command(custom => custom.Custom("View").Click("ViewCarrier")).Width(120);
                     })
                 .HtmlAttributes(new { style = "height: 550px;" })
                 .Scrollable()
                 .Filterable()
                 .Sortable()
                 .Resizable(resizable => resizable.Columns(true))
                 .Pageable(pageable => pageable
                     .Refresh(true)
                     .PageSizes(true)
                     .ButtonCount(5))
                 .DataSource(dataSource => dataSource
                     .Ajax()
                     .Read(read => read.Action("GetCarriers", "Account"))
                     .PageSize(20)
                 )
                )

            </div>
        </div>
    </div>
</div>

<script>


    function ViewCarrier(e) {
       var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = '@Url.Action("CarrierData","Account")/' + dataItem.CarrierId;
        }

</script>

